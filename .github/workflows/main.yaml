name: Build, Test & Release on Push

on:
  push:
    branches:
      - main
jobs:
  build:
    uses: khumozin/workflow-templates/.github/workflows/angular-build-app.yml@1.5.0
    with:
        node_version: "['20.x']"

  snyk:
    uses: khumozin/workflow-templates/.github/workflows/nodejs-dependency-analysis.yml@1.5.0
    with:
      node_version: "['20.x']"
    secrets: inherit

  git-guardian:
    uses: khumozin/workflow-templates/.github/workflows/gitguardian-secret-scan.yml@1.5.0
    secrets: inherit

  gitleaks:
    uses: khumozin/workflow-templates/.github/workflows/gitleaks-secret-scan.yml@1.5.0

  semantic-release:
    needs: [build, snyk, git-guardian, gitleaks]
    uses: khumozin/workflow-templates/.github/workflows/nodejs-semantic-release.yml@1.5.0
    with:
      node_version: "['20.x']"
    permissions:
      contents: write

  image-build:
    runs-on: ubuntu-latest
    needs: [semantic-release]
    if: ${{ needs.semantic-release.outputs.pkg-version != needs.semantic-release.outputs.prev-pkg-version }}
    steps:
        - uses: actions/checkout@v4

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Cache Docker layers
          uses: actions/cache@v3
          with:
             path: /tmp/.buildx-cache
             key: ${{ runner.os }}-docker-${{ github.sha }}
             restore-keys: |
                  ${{ runner.os }}-docker-

        - name: Log in to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

        - name: Build and push multi-platform Docker image
          uses: docker/build-push-action@v5
          with:
            context: .
            file: ./Dockerfile
            platforms: linux/amd64,linux/arm64
            push: true
            tags: |
                ${{ secrets.DOCKER_USERNAME }}/news-api:latest
                ${{ secrets.DOCKER_USERNAME }}/news-api:v${{ fromJSON(needs.semantic-release.outputs.pkg-version) }}
            cache-from: type=local,src=/tmp/.buildx-cache
            cache-to: type=local,dest=/tmp/.buildx-cache-new

        - name: Replace cache for future builds
          run: |
            rm -rf /tmp/.buildx-cache
            mv /tmp/.buildx-cache-new /tmp/.buildx-cache
